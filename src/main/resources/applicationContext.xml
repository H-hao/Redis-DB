<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx.xsd">


	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<context:component-scan base-package="cn.hh.study.spring_data.redis" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- 加载映射文件 -->
		<property name="mappingLocations" value="classpath*:cn/hh/study/spring_data/redis/domain/*.hbm.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<!-- <prop key="hibernate.format_sql">${hibernate.format_sql}</prop> -->
				<prop key="hibernate.hbm2ddl">${hibernate.hbm2ddl}</prop>
			</props>
		</property>
	</bean>
	
	<!-- 这里的属性名与 spring-data-redis的版本有关系,如果不设置这些属性,也有相应的默认值 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
<!--         <property name="maxIdle" value="${redis.maxIdle}" />   -->
<!--         <property name="maxTotal" value="${redis.maxTotal}" />   -->
<!--         <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />   -->
<!--         <property name="testOnBorrow" value="${redis.testOnBorrow}" />   -->
    </bean>  
      
<!--     <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"   -->
<!--         p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig"/>   -->
      	
	<!-- 配置redis -->
	<bean id="jedisConnectionFactory" 
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
    p:use-pool="true" />

	<!-- redis template definition -->
	<bean id="redisTemplate" 
	    class="org.springframework.data.redis.core.RedisTemplate" 
	    p:connection-factory-ref="jedisConnectionFactory"/>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- 配置事务增强 -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="find*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="get*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="query*" read-only="true" propagation="SUPPORTS" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置aop切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* cn.hh.study.spring_data.redis.service.I*Service.*(..))" />
	</aop:config>

	<import resource="classpath:applicationContext-user.xml" />
	
</beans>
